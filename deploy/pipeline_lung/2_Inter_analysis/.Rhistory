in_file <- read.csv("ligand_receptor_ints_lung_epithelial_immune_cells.txt", sep = "\t")
# Outfile dir
plot_out <- "outputs"
##### Plot non facet function #####
plot_non_facet <- function(in_data, outfile, wid, hei, coeff, axis2){
# Values used to transform data
if (axis2 == TRUE){
plot_ligs_tog <- ggplot(in_data, aes(x=reorder(receptor, num_ints), num_ints, fill = n_ligands)) +
geom_bar(aes(y=num_ints), stat="identity") +
scale_fill_continuous(low="lightblue", high="blue2",limits=c(0,7)) +
geom_point(aes(y=num_imm_cells*coeff), size=2, colour ="black") +
scale_x_reordered() +
scale_y_continuous(
# Features of the first axis
name = "Number of intercellular interactions",
# Add a second axis and specify its features
sec.axis = sec_axis(~./coeff, name="Number of immune cells targeted")) +
theme_light()+
theme(axis.title.y = element_text(color = "black"),
axis.title.y.right = element_text(color = "black")) +
theme(legend.position = "bottom") +
theme(strip.text.x = element_text(size = 8, color = "black", face = "bold"),
strip.text.y = element_text(size = 8, color = "black", face = "bold")) +
theme(axis.text.x = element_text(angle=45, hjust=1),text = element_text(size = 8)) +
xlab("Receptor")
} else {
plot_ligs_tog <- ggplot(in_data, aes(x=reorder(receptor, num_ints), num_ints, fill = n_ligands)) +
geom_bar(aes(y=num_ints), stat="identity") +
scale_fill_continuous(low="lightblue", high="blue2", limits=c(0,7)) +
scale_x_reordered() +
scale_y_continuous(name = "Number of intercellular interactions")+
theme_light()+
theme(axis.title.y = element_text(color = "black")) +
theme(legend.position = "bottom") +
theme(strip.text.x = element_text(size = 8, color = "black", face = "bold"),
strip.text.y = element_text(size = 8, color = "black", face = "bold")) +
theme(axis.text.x = element_text(angle=45, hjust=1),text = element_text(size = 8)) +
xlab("Receptor")
}
# Save
ggsave(plot_ligs_tog, file=outfile, width=wid, height=hei)
}
##### Process degs #####
# Split up and down regulated interactions
in_file <- in_file %>% mutate(ligand_dir = ifelse(ligand_lfc >0, "upreg","downreg"))
ints_spl <- split(in_file, in_file$ligand_dir)
for (name in names(ints_spl)){
# Get interactions with that direction
ints <- ints_spl[[name]]
# Collapse per receptor, count num interactions, count num of imm cell types
ints_sep <- ints %>% select(ligand_cell_source, receptor, receptor_cell_target) %>% group_by(ligand_cell_source, receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n()) %>%
#arrange(receptor_cell_target, num_ints)
ungroup() %>%
mutate(ligand_cell_source = as.factor(ligand_cell_source),
receptor = reorder_within(receptor, num_ints, ligand_cell_source))
ints_tog <- ints %>% group_by(receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand))
#ints_ie2 <- ints %>% filter((ligand_cell_source == "imm_enterocyte_2")|(ligand_cell_source == "imm_enterocytes_2")) %>% group_by(receptor) %>%
#  summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand))
##### Plot facet #####
# Plot data
plot_ligs <- ggplot(ints_sep, aes(x=receptor, fill = num_imm_cells)) +
geom_bar(aes(y=num_ints), stat="identity") +
scale_fill_continuous(low="lightblue", high="darkblue") +
#facet_grid(~ligand_cell_source, scales = "free_x", space='free') + # Good for the infected cells where some have way more ligands than others
facet_wrap(~ligand_cell_source, scales = "free_x") + # Good for the bystanders where plots similar size between cell types
scale_x_reordered() +
scale_y_continuous(
# Features of the first axis
name = "Number of intercellular interactions")+
theme_light()+
theme(
axis.title.y = element_text(color = "black"))+
theme(legend.position = "bottom") +
theme(
strip.text.x = element_text(
size = 5, color = "black", face = "bold"))+
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size = 6))
#plot_ligs
# Filename
file_n <- paste0("facet_num_ints_per_receptor_num_imm_cells_", name, ".png")
# Save
ggsave(plot_ligs, file=file.path(plot_out,file_n),width = 30, height=8)
##### Plot together #####
file_n_sep <- paste0("together_num_ints_per_receptor_num_imm_cells_", name, ".png")
plot_non_facet(ints_tog, file.path(plot_out, file_n_sep),10, 3, 5, TRUE)
##### Plot facet per epi cell type #####   #this is the one I need
# Get unique epithelial cell types
cell_types <- unique(ints_sep$ligand_cell_source)
for (cell in cell_types) {
# Filter data for that epi cell type
ints_sep_cell <- ints %>% filter(ligand_cell_source == cell) %>% group_by(receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand)) #%>% top_n(25, num_ints)
# Get file path
file_p <- paste0(cell, "_num_ints_per_receptor_num_imm_cells_", name, ".png")
# plot
plot_non_facet(ints_sep_cell, file.path(plot_out, file_p),8, 3, 4, TRUE)
}
}
# Get unique epithelial cell types
cell_types <- unique(ints_sep$ligand_cell_source)
for (cell in cell_types) {
# Filter data for that epi cell type
ints_sep_cell <- ints %>% filter(ligand_cell_source == cell) %>% group_by(receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand)) %>% top_n(25, num_ints)
# Get file path
file_p <- paste0(cell, "top25_num_ints_per_receptor_num_imm_cells_", name, ".png")
# plot
plot_non_facet(ints_sep_cell, file.path(plot_out, file_p),8, 3, 4, TRUE)
}
}
for (cell in cell_types) {
# Filter data for that epi cell type
ints_sep_cell <- ints %>% filter(ligand_cell_source == cell) %>% group_by(receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand)) %>% top_n(25, num_ints)
# Get file path
file_p <- paste0(cell, "top25_num_ints_per_receptor_num_imm_cells_", name, ".png")
# plot
plot_non_facet(ints_sep_cell, file.path(plot_out, file_p),8, 3, 4, TRUE)
}
setwd("/Users/poletti/OneDrive\ -\ Norwich\ BioScience\ Institutes/Bioinformatics/Lung_run/ciliated_cells_moderate")
# Input files
in_file <- read.csv("ligand_receptor_ints_lung_epithelial_immune_cells.txt", sep = "\t")
# Outfile dir
plot_out <- "outputs"
##### Plot non facet function #####
plot_non_facet <- function(in_data, outfile, wid, hei, coeff, axis2){
# Values used to transform data
if (axis2 == TRUE){
plot_ligs_tog <- ggplot(in_data, aes(x=reorder(receptor, num_ints), num_ints, fill = n_ligands)) +
geom_bar(aes(y=num_ints), stat="identity") +
scale_fill_continuous(low="lightblue", high="blue2",limits=c(0,7)) +
geom_point(aes(y=num_imm_cells*coeff), size=2, colour ="black") +
scale_x_reordered() +
scale_y_continuous(
# Features of the first axis
name = "Number of intercellular interactions",
# Add a second axis and specify its features
sec.axis = sec_axis(~./coeff, name="Number of immune cells targeted")) +
theme_light()+
theme(axis.title.y = element_text(color = "black"),
axis.title.y.right = element_text(color = "black")) +
theme(legend.position = "bottom") +
theme(strip.text.x = element_text(size = 8, color = "black", face = "bold"),
strip.text.y = element_text(size = 8, color = "black", face = "bold")) +
theme(axis.text.x = element_text(angle=45, hjust=1),text = element_text(size = 8)) +
xlab("Receptor")
} else {
plot_ligs_tog <- ggplot(in_data, aes(x=reorder(receptor, num_ints), num_ints, fill = n_ligands)) +
geom_bar(aes(y=num_ints), stat="identity") +
scale_fill_continuous(low="lightblue", high="blue2", limits=c(0,7)) +
scale_x_reordered() +
scale_y_continuous(name = "Number of intercellular interactions")+
theme_light()+
theme(axis.title.y = element_text(color = "black")) +
theme(legend.position = "bottom") +
theme(strip.text.x = element_text(size = 8, color = "black", face = "bold"),
strip.text.y = element_text(size = 8, color = "black", face = "bold")) +
theme(axis.text.x = element_text(angle=45, hjust=1),text = element_text(size = 8)) +
xlab("Receptor")
}
# Save
ggsave(plot_ligs_tog, file=outfile, width=wid, height=hei)
}
##### Process degs #####
# Split up and down regulated interactions
in_file <- in_file %>% mutate(ligand_dir = ifelse(ligand_lfc >0, "upreg","downreg"))
ints_spl <- split(in_file, in_file$ligand_dir)
for (name in names(ints_spl)){
# Get interactions with that direction
ints <- ints_spl[[name]]
# Collapse per receptor, count num interactions, count num of imm cell types
ints_sep <- ints %>% select(ligand_cell_source, receptor, receptor_cell_target) %>% group_by(ligand_cell_source, receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n()) %>%
#arrange(receptor_cell_target, num_ints)
ungroup() %>%
mutate(ligand_cell_source = as.factor(ligand_cell_source),
receptor = reorder_within(receptor, num_ints, ligand_cell_source))
ints_tog <- ints %>% group_by(receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand))
#ints_ie2 <- ints %>% filter((ligand_cell_source == "imm_enterocyte_2")|(ligand_cell_source == "imm_enterocytes_2")) %>% group_by(receptor) %>%
#  summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand))
##### Plot facet #####
# Plot data
plot_ligs <- ggplot(ints_sep, aes(x=receptor, fill = num_imm_cells)) +
geom_bar(aes(y=num_ints), stat="identity") +
scale_fill_continuous(low="lightblue", high="darkblue") +
#facet_grid(~ligand_cell_source, scales = "free_x", space='free') + # Good for the infected cells where some have way more ligands than others
facet_wrap(~ligand_cell_source, scales = "free_x") + # Good for the bystanders where plots similar size between cell types
scale_x_reordered() +
scale_y_continuous(
# Features of the first axis
name = "Number of intercellular interactions")+
theme_light()+
theme(
axis.title.y = element_text(color = "black"))+
theme(legend.position = "bottom") +
theme(
strip.text.x = element_text(
size = 5, color = "black", face = "bold"))+
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size = 6))
#plot_ligs
# Filename
file_n <- paste0("facet_num_ints_per_receptor_num_imm_cells_", name, ".png")
# Save
ggsave(plot_ligs, file=file.path(plot_out,file_n),width = 30, height=8)
##### Plot together #####
file_n_sep <- paste0("together_num_ints_per_receptor_num_imm_cells_", name, ".png")
plot_non_facet(ints_tog, file.path(plot_out, file_n_sep),10, 3, 5, TRUE)
##### Plot facet per epi cell type #####   #this is the one I need
# Get unique epithelial cell types
cell_types <- unique(ints_sep$ligand_cell_source)
for (cell in cell_types) {
# Filter data for that epi cell type
ints_sep_cell <- ints %>% filter(ligand_cell_source == cell) %>% group_by(receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand)) %>% top_n(25, num_ints)
# Get file path
file_p <- paste0(cell, "top25_num_ints_per_receptor_num_imm_cells_", name, ".png")
# plot
plot_non_facet(ints_sep_cell, file.path(plot_out, file_p),8, 3, 4, TRUE)
}
}
library(tidyverse)
library(reshape2)
library(pheatmap)
library(RColorBrewer)
library(ggplot2)
library(viridis)
setwd("/Users/poletti/OneDrive\ -\ Norwich\ BioScience\ Institutes/Bioinformatics/Lung_run/ciliated_cells_moderate")
# Input files - infected cells (specific cell type already filtered)
lr_sep<- read.csv("lung_ciliated_ligand_imm_cell_network.txt", sep = "\t")
# Name of cell type (and infected or bystander) for output filename
ligand_celltype <- "ciliated_cells"
# Outfile for the normal heatplot
out_f <- ""
##### Preprocess #####
# Add ligand dir column
lr_sep <- lr_sep %>% mutate(ligand_dir = if_else(ligand_lfc >0, "upreg", "downreg"))
# PLotting function
hplot <- function(indata2, out_f){
# Split up and downregulated interactions
indata_spl <- split(indata2, indata2$ligand_dir)
# Iterate split tables
for (name1 in names(indata_spl)){
# get dataframe
table1 <- indata_spl[[name1]]
# Heatmap with clustering and without facet
# Reshape dataframe
dat <- table1 %>% ungroup() %>% select(c(ligand, receptor_cell_target, sum_receptor_exp)) %>% spread(ligand, sum_receptor_exp, fill = 0) %>%
column_to_rownames(var="receptor_cell_target")
## Specify colours
#bk1 <- c(0,0.4)
#bk2 <- c(seq(0.5,85, by = 0.5))
#bk <- c(bk1, bk2)
#my_palette <- c(colorRampPalette(colors = c("white"))(n = length(bk1)),
#c(colorRampPalette(colors = c("#DADAEB", "#4A1486"))(n = length(bk2))))
# Specify colours - intervals
bk <- c(0,0.9,1.9,2.9,3.9,4.9,5.9,7)
my_palette <- c('#4575b4','#91bfdb','#e0f3f8','#ffffbf','#fee090','#fc8d59','#d73027')
# Create output filepath
out_p <- paste0(out_f, "1_heatplot_ligand_vs_immcell_", ligand_celltype, "_", name1, ".png")
# heatplot
if (ncol(dat) <3) {
clus_c = F
} else {
clus_c = T
}
if (nrow(dat) <3) {
clus_r = F
} else {
clus_r = T
}
pheatmap(as.matrix(dat),
angle_col = 45,
color = my_palette,
breaks = bk,
cluster_rows = clus_r,
cellheight = 6,
cellwidth = 8,
border_color = "darkgrey",
fontsize = 6,
cluster_cols =clus_c,
treeheight_row = 0,
treeheight_col = 0,
main = paste0(ligand_celltype, " sum of receptor expression "),
filename = out_p)
}
}
# Call function to plot
hplot(lr_sep, out_f)
setwd("/Users/poletti/OneDrive\ -\ Norwich\ BioScience\ Institutes/Bioinformatics/Lung_run/ciliated_cells_moderate")
# Input files
in_file <- read.csv("ligand_receptor_ints_lung_epithelial_immune_cells.txt", sep = "\t")
# Outfile dir
plot_out <- ""
##### Plot non facet function #####
plot_non_facet <- function(in_data, outfile, wid, hei, coeff, axis2){
# Values used to transform data
if (axis2 == TRUE){
plot_ligs_tog <- ggplot(in_data, aes(x=reorder(receptor, num_ints), num_ints, fill = n_ligands)) +
geom_bar(aes(y=num_ints), stat="identity") +
scale_fill_continuous(low="lightblue", high="blue2",limits=c(0,7)) +
geom_point(aes(y=num_imm_cells*coeff), size=2, colour ="black") +
scale_x_reordered() +
scale_y_continuous(
# Features of the first axis
name = "Number of intercellular interactions",
# Add a second axis and specify its features
sec.axis = sec_axis(~./coeff, name="Number of immune cells targeted")) +
theme_light()+
theme(axis.title.y = element_text(color = "black"),
axis.title.y.right = element_text(color = "black")) +
theme(legend.position = "bottom") +
theme(strip.text.x = element_text(size = 8, color = "black", face = "bold"),
strip.text.y = element_text(size = 8, color = "black", face = "bold")) +
theme(axis.text.x = element_text(angle=45, hjust=1),text = element_text(size = 8)) +
xlab("Receptor")
} else {
plot_ligs_tog <- ggplot(in_data, aes(x=reorder(receptor, num_ints), num_ints, fill = n_ligands)) +
geom_bar(aes(y=num_ints), stat="identity") +
scale_fill_continuous(low="lightblue", high="blue2", limits=c(0,7)) +
scale_x_reordered() +
scale_y_continuous(name = "Number of intercellular interactions")+
theme_light()+
theme(axis.title.y = element_text(color = "black")) +
theme(legend.position = "bottom") +
theme(strip.text.x = element_text(size = 8, color = "black", face = "bold"),
strip.text.y = element_text(size = 8, color = "black", face = "bold")) +
theme(axis.text.x = element_text(angle=45, hjust=1),text = element_text(size = 8)) +
xlab("Receptor")
}
# Save
ggsave(plot_ligs_tog, file=outfile, width=wid, height=hei)
}
##### Process degs #####
# Split up and down regulated interactions
in_file <- in_file %>% mutate(ligand_dir = ifelse(ligand_lfc >0, "upreg","downreg"))
ints_spl <- split(in_file, in_file$ligand_dir)
for (name in names(ints_spl)){
# Get interactions with that direction
ints <- ints_spl[[name]]
# Collapse per receptor, count num interactions, count num of imm cell types
ints_sep <- ints %>% select(ligand_cell_source, receptor, receptor_cell_target) %>% group_by(ligand_cell_source, receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n()) %>%
#arrange(receptor_cell_target, num_ints)
ungroup() %>%
mutate(ligand_cell_source = as.factor(ligand_cell_source),
receptor = reorder_within(receptor, num_ints, ligand_cell_source))
ints_tog <- ints %>% group_by(receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand))
#ints_ie2 <- ints %>% filter((ligand_cell_source == "imm_enterocyte_2")|(ligand_cell_source == "imm_enterocytes_2")) %>% group_by(receptor) %>%
#  summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand))
##### Plot facet #####
# Plot data
plot_ligs <- ggplot(ints_sep, aes(x=receptor, fill = num_imm_cells)) +
geom_bar(aes(y=num_ints), stat="identity") +
scale_fill_continuous(low="lightblue", high="darkblue") +
#facet_grid(~ligand_cell_source, scales = "free_x", space='free') + # Good for the infected cells where some have way more ligands than others
facet_wrap(~ligand_cell_source, scales = "free_x") + # Good for the bystanders where plots similar size between cell types
scale_x_reordered() +
scale_y_continuous(
# Features of the first axis
name = "Number of intercellular interactions")+
theme_light()+
theme(
axis.title.y = element_text(color = "black"))+
theme(legend.position = "bottom") +
theme(
strip.text.x = element_text(
size = 5, color = "black", face = "bold"))+
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size = 6))
#plot_ligs
# Filename
file_n <- paste0("facet_num_ints_per_receptor_num_imm_cells_", name, ".png")
# Save
ggsave(plot_ligs, file=file.path(plot_out,file_n),width = 30, height=8)
##### Plot together #####
file_n_sep <- paste0("together_num_ints_per_receptor_num_imm_cells_", name, ".png")
plot_non_facet(ints_tog, file.path(plot_out, file_n_sep),10, 3, 5, TRUE)
##### Plot facet per epi cell type #####   #this is the one I need
# Get unique epithelial cell types
cell_types <- unique(ints_sep$ligand_cell_source)
for (cell in cell_types) {
# Filter data for that epi cell type
ints_sep_cell <- ints %>% filter(ligand_cell_source == cell) %>% group_by(receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand)) %>% top_n(25, num_ints)
# Get file path
file_p <- paste0(cell, "top25_num_ints_per_receptor_num_imm_cells_", name, ".png")
# plot
plot_non_facet(ints_sep_cell, file.path(plot_out, file_p),8, 3, 4, TRUE)
}
}
# R script to create bar plot of number of interactions across all epithelial cells for each immune cell receptor
# Not split up by immune cell
#
# Author: Agatha Treveil, December 2020
#
# Input: All interactions output from the python scripts epithelial_organoid_immune_cells_interaction_ileum{colon}.py
#
# Output: Png plots - per epithelial cell type. facet plot across epi cell types and all epi cell types together
##### Set up #####
library(tidyverse)
library(ggplot2)
library(hrbrthemes)
library(tidytext)
setwd("/Users/poletti/OneDrive\ -\ Norwich\ BioScience\ Institutes/Bioinformatics/Lung_run/ciliated_cells_moderate")
# Input files
in_file <- read.csv("ligand_receptor_ints_lung_epithelial_immune_cells.txt", sep = "\t")
# Outfile dir
plot_out <- "outputs"
##### Plot non facet function #####
plot_non_facet <- function(in_data, outfile, wid, hei, coeff, axis2){
# Values used to transform data
if (axis2 == TRUE){
plot_ligs_tog <- ggplot(in_data, aes(x=reorder(receptor, num_ints), num_ints, fill = n_ligands)) +
geom_bar(aes(y=num_ints), stat="identity") +
scale_fill_continuous(low="lightblue", high="blue2",limits=c(0,7)) +
geom_point(aes(y=num_imm_cells*coeff), size=2, colour ="black") +
scale_x_reordered() +
scale_y_continuous(
# Features of the first axis
name = "Number of intercellular interactions",
# Add a second axis and specify its features
sec.axis = sec_axis(~./coeff, name="Number of immune cells targeted")) +
theme_light()+
theme(axis.title.y = element_text(color = "black"),
axis.title.y.right = element_text(color = "black")) +
theme(legend.position = "bottom") +
theme(strip.text.x = element_text(size = 8, color = "black", face = "bold"),
strip.text.y = element_text(size = 8, color = "black", face = "bold")) +
theme(axis.text.x = element_text(angle=45, hjust=1),text = element_text(size = 8)) +
xlab("Receptor")
} else {
plot_ligs_tog <- ggplot(in_data, aes(x=reorder(receptor, num_ints), num_ints, fill = n_ligands)) +
geom_bar(aes(y=num_ints), stat="identity") +
scale_fill_continuous(low="lightblue", high="blue2", limits=c(0,7)) +
scale_x_reordered() +
scale_y_continuous(name = "Number of intercellular interactions")+
theme_light()+
theme(axis.title.y = element_text(color = "black")) +
theme(legend.position = "bottom") +
theme(strip.text.x = element_text(size = 8, color = "black", face = "bold"),
strip.text.y = element_text(size = 8, color = "black", face = "bold")) +
theme(axis.text.x = element_text(angle=45, hjust=1),text = element_text(size = 8)) +
xlab("Receptor")
}
# Save
ggsave(plot_ligs_tog, file=outfile, width=wid, height=hei)
}
##### Process degs #####
# Split up and down regulated interactions
in_file <- in_file %>% mutate(ligand_dir = ifelse(ligand_lfc >0, "upreg","downreg"))
ints_spl <- split(in_file, in_file$ligand_dir)
for (name in names(ints_spl)){
# Get interactions with that direction
ints <- ints_spl[[name]]
# Collapse per receptor, count num interactions, count num of imm cell types
ints_sep <- ints %>% select(ligand_cell_source, receptor, receptor_cell_target) %>% group_by(ligand_cell_source, receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n()) %>%
#arrange(receptor_cell_target, num_ints)
ungroup() %>%
mutate(ligand_cell_source = as.factor(ligand_cell_source),
receptor = reorder_within(receptor, num_ints, ligand_cell_source))
ints_tog <- ints %>% group_by(receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand))
#ints_ie2 <- ints %>% filter((ligand_cell_source == "imm_enterocyte_2")|(ligand_cell_source == "imm_enterocytes_2")) %>% group_by(receptor) %>%
#  summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand))
##### Plot facet #####
# Plot data
plot_ligs <- ggplot(ints_sep, aes(x=receptor, fill = num_imm_cells)) +
geom_bar(aes(y=num_ints), stat="identity") +
scale_fill_continuous(low="lightblue", high="darkblue") +
#facet_grid(~ligand_cell_source, scales = "free_x", space='free') + # Good for the infected cells where some have way more ligands than others
facet_wrap(~ligand_cell_source, scales = "free_x") + # Good for the bystanders where plots similar size between cell types
scale_x_reordered() +
scale_y_continuous(
# Features of the first axis
name = "Number of intercellular interactions")+
theme_light()+
theme(
axis.title.y = element_text(color = "black"))+
theme(legend.position = "bottom") +
theme(
strip.text.x = element_text(
size = 5, color = "black", face = "bold"))+
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size = 6))
#plot_ligs
# Filename
file_n <- paste0("facet_num_ints_per_receptor_num_imm_cells_", name, ".png")
# Save
ggsave(plot_ligs, file=file.path(plot_out,file_n),width = 30, height=8)
##### Plot together #####
file_n_sep <- paste0("together_num_ints_per_receptor_num_imm_cells_", name, ".png")
plot_non_facet(ints_tog, file.path(plot_out, file_n_sep),10, 3, 5, TRUE)
##### Plot facet per epi cell type #####   #this is the one I need
# Get unique epithelial cell types
cell_types <- unique(ints_sep$ligand_cell_source)
for (cell in cell_types) {
# Filter data for that epi cell type
ints_sep_cell <- ints %>% filter(ligand_cell_source == cell) %>% group_by(receptor) %>%
summarise(num_imm_cells = n_distinct(receptor_cell_target), num_ints = n(), n_ligands = n_distinct(ligand)) %>% top_n(25, num_ints)
# Get file path
file_p <- paste0(cell, "top25_num_ints_per_receptor_num_imm_cells_", name, ".png")
# plot
plot_non_facet(ints_sep_cell, file.path(plot_out, file_p),8, 3, 4, TRUE, width = 20, height=8)
}
}
